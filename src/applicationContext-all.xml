<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- 扫描classpath下带有注解的类，注册成spring bean。Spring 默认提供的注解包括@Component，@Repository，
      @Service，@Controller，@RestController，@ControllerAdvice, @Configuration。 -->
    <context:component-scan base-package="com.wjmShop" />
    
    <!-- 配置数据源 1.导入资源文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	
	<!-- 数据源1配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${db.initialSize}" />
		<!-- 连接池最大数量  -->
		<property name="maxActive" value="${db.maxActive}" />
		<!-- 连接池最小数量  -->
		<property name="maxIdle" value="${db.maxIdle}" />
		<!-- 获取连接最大等待时间 -->
		<!-- <property name="maxWait" value="${maxWait}"></property> -->
	</bean>

    
    <!-- 创建SqlSessionFactory，同时指定数据源 -->
    <bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">            
	    <property name="dataSource" ref="dataSource" />         
	    <property name="configLocation"  value="classpath:mybatis-config.xml"></property>  
	    <!-- 自动扫描mapping.xml文件，**表示迭代查找,也可在sqlMapConfig.xml中单独指定xml文件-->
        <!-- <property name="mapperLocations" value="classpath:com/scy/pojo/*.xml" />  -->     
	</bean> 
	
	<!-- 由spring管理mybatis的事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
     
     <!-- 开启注解事务 -->
    <tx:advice id="txAdivce" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*"  propagation="REQUIRED" rollback-for="SQLException"/>
            <tx:method name="udpate*" propagation="REQUIRED" rollback-for="SQLException"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="SQLException"/>
        </tx:attributes>
    </tx:advice>
     
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* com.wjmShop.*.service.impl.*.*(..))" />
        <aop:advisor advice-ref="txAdivce" pointcut-ref="pointcut"/>
    </aop:config>
    
    <!-- 配置事务拦截器 -->
    <!-- <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
		    <prop key="insert*">PROPAGATION_REQUIRED</prop>
		    <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
		    <prop key="get*">PROPAGATION_REQUIRED</prop>
		    <prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
		    <prop key="create*">PROPAGATION_REQUIRED</prop>
		    <prop key="delete*">PROPAGATION_REQUIRED</prop>
		    <prop key="del*">PROPAGATION_REQUIRED</prop>
		    <prop key="update*">PROPAGATION_REQUIRED</prop>
		    <prop key="start*">PROPAGATION_REQUIRED</prop>
		    <prop key="cancel*">PROPAGATION_REQUIRED</prop>
		    <prop key="stop*">PROPAGATION_REQUIRED</prop>
		    <prop key="save*">PROPAGATION_REQUIRED</prop>
		    <prop key="add*">PROPAGATION_REQUIRED</prop>
		    <prop key="update*">PROPAGATION_REQUIRED</prop>
		    <prop key="remove*">PROPAGATION_REQUIRED</prop>
		    <prop key="pay*">PROPAGATION_REQUIRED</prop>
		    <prop key="verify*">PROPAGATION_REQUIRED</prop>
		   </props>
		</property>
	</bean>
	
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>	 -->
	
</beans>    